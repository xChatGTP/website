/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  DotRegistry,
  DotRegistryInterface,
} from "../../contracts/DotRegistry";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coreBridgedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "NewResolver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "NewTTL",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "addSupportedChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chainIds",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "payloadID",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "node",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "owner",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "resolver",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "ttl",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "srcChain",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct RegistryStructs.Registration",
        name: "reg",
        type: "tuple",
      },
    ],
    name: "encodeRegistration",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIds",
    outputs: [
      {
        internalType: "uint16[]",
        name: "",
        type: "uint16[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pending",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "pendingResolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "receiveSetOwner",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "recordExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "registryDelegates",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "removeSupportedChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "resolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "revertSetOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "bool",
        name: "permitted",
        type: "bool",
      },
    ],
    name: "setRegistryDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "ttl",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052600260a0818152600660c0526200001f916004919062000104565b506006805463ffffffff191690553480156200003a57600080fd5b506040516200240d3803806200240d8339810160408190526200005d91620001ca565b6200006833620000b4565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4980546001600160a01b031916331790556001600160a01b0316608052620001fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090600f01601090048101928215620001a15791602002820160005b838211156200016f57835183826101000a81548161ffff021916908360ff16021790555092602001926002016020816001010492830192600103026200012e565b80156200019f5782816101000a81549061ffff02191690556002016020816001010492830192600103026200016f565b505b50620001af929150620001b3565b5090565b5b80821115620001af5760008155600101620001b4565b600060208284031215620001dd57600080fd5b81516001600160a01b0381168114620001f557600080fd5b9392505050565b6080516121c46200024960003960008181610400015281816109d101528181610c6901528181610e7e01528181610f3e015281816112d6015281816113c1015261146e01526121c46000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80633b9cb5b0116100e3578063b84210461161008c578063cf40882311610066578063cf40882314610481578063f2fde38b14610494578063f79fe538146104a757600080fd5b8063b842104614610448578063b84bc4ba1461045b578063ce7dad3c1461046e57600080fd5b806384acd1bb116100bd57806384acd1bb146103fe5780638da5cb5b14610424578063a70500a01461043557600080fd5b80633b9cb5b0146103d05780635b0fc9c3146103e3578063715018a6146103f657600080fd5b806316a25cbd116101455780631fe8d0ba1161011f5780631fe8d0ba1461037557806321d930901461039557806327e2d2a0146103bb57600080fd5b806316a25cbd146102d85780631808eeb8146103375780631d7763231461036057600080fd5b806302571be31161017657806302571be3146102645780630d88c7d81461027757806313de86cb146102b557600080fd5b80630178b8bf1461019257806301e64725146101dc575b600080fd5b6101bf6101a03660046119f5565b600090815260016020819052604090912001546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6102346101ea3660046119f5565b600160208190526000918252604090912080549101546001600160a01b039182169181169074010000000000000000000000000000000000000000900467ffffffffffffffff1683565b604080516001600160a01b03948516815293909216602084015267ffffffffffffffff16908201526060016101d3565b6101bf6102723660046119f5565b6104d2565b6102a5610285366004611a1e565b600360209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101d3565b6102a56102c33660046119f5565b60056020526000908152604090205460ff1681565b61031e6102e63660046119f5565b6000908152600160208190526040909120015474010000000000000000000000000000000000000000900467ffffffffffffffff1690565b60405167ffffffffffffffff90911681526020016101d3565b6101bf6103453660046119f5565b6002602052600090815260409020546001600160a01b031681565b610368610501565b6040516101d39190611a4e565b610388610383366004611b4f565b610581565b6040516101d39190611c50565b6103a86103a33660046119f5565b610676565b60405161ffff90911681526020016101d3565b6103ce6103c9366004611c6a565b6106ae565b005b6103ce6103de3660046119f5565b6107f5565b61031e6103f1366004611ca3565b61082f565b6103ce61098d565b7f00000000000000000000000000000000000000000000000000000000000000006101bf565b6000546001600160a01b03166101bf565b6101bf6104433660046119f5565b6109a1565b61031e610456366004611ccf565b6109ca565b6103ce610469366004611c6a565b610ff5565b6103ce61047c366004611d4f565b6110b4565b6103ce61048f366004611d7b565b6110fa565b6103ce6104a2366004611dca565b61110b565b6102a56104b53660046119f5565b6000908152600160205260409020546001600160a01b0316151590565b6000818152600160205260408120546001600160a01b0316308114156104fb5750600092915050565b92915050565b6060600480548060200260200160405190810160405280929190818152602001828054801561057757602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff168152602001906002019060208260010104928301926001038202915080841161053e5790505b5050505050905090565b6060816000015182602001518360400151846060015185608001518660a001518760c00151604051602001610660979695949392919060f897881b7fff00000000000000000000000000000000000000000000000000000000000000908116825260018201979097526021810195909552604185019390935260c09190911b7fffffffffffffffff00000000000000000000000000000000000000000000000016606184015260f01b7fffff00000000000000000000000000000000000000000000000000000000000016606983015290921b16606b820152606c0190565b6040516020818303038152906040529050919050565b6004818154811061068657600080fd5b9060005260206000209060109182820401919006600202915054906101000a900461ffff1681565b6106b6611198565b60005b6004548110156107f0578161ffff16600482815481106106db576106db611de5565b60009182526020909120601082040154600f9091166002026101000a900461ffff1614156107e8576004805461071390600190611e11565b8154811061072357610723611de5565b90600052602060002090601091828204019190066002029054906101000a900461ffff166004828154811061075a5761075a611de5565b90600052602060002090601091828204019190066002026101000a81548161ffff021916908361ffff160217905550600480548061079a5761079a611e28565b60008281526020902060107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191820401805461ffff6002600f8516026101000a021916905590555050565b6001016106b9565b505b50565b6107fd611198565b6000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690556107f2816111f2565b60008281526001602052604081205483906001600160a01b031680156108d2576001600160a01b03811633146108d25760405162461bcd60e51b815260206004820152602760248201527f556e617574686f72697a656420746f20736574207265636f726420666f72207460448201527f6865206e6f64650000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008581526002602052604090205485906001600160a01b0316156109395760405162461bcd60e51b815260206004820152601760248201527f526567697374726174696f6e2069732070656e64696e6700000000000000000060448201526064016108c9565b6109438686611292565b6040516001600160a01b038716815290945086907fd4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d2669060200160405180910390a250505092915050565b610995611198565b61099f600061151e565b565b6000818152600260205260408120546001600160a01b0316308114156104fb5750600092915050565b60008080807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c0fd8bde87876040518363ffffffff1660e01b8152600401610a1d929190611e3e565b60006040518083038186803b158015610a3557600080fd5b505afa158015610a49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a719190810190611fdb565b925092509250818190610a975760405162461bcd60e51b81526004016108c99190611c50565b50608083015160009081526005602052604090205460ff16610b215760405162461bcd60e51b815260206004820152602e60248201527f556e726567697374657265642064656c6567617465207265676973747279206560448201527f6d6974746572206164647265737300000000000000000000000000000000000060648201526084016108c9565b6000610b308460e0015161157b565b90508060c0015160ff1660011415610b71576020808201516000908152600382526040808220606088015161ffff16835290925220805460ff191660011790555b610b7e81602001516116b0565b15610c5257610b9081602001516111f2565b6040810151602082810180516000908152600192839052604080822080546001600160a01b0396871673ffffffffffffffffffffffffffffffffffffffff199182161790915560608701518451845282842086018054919097169116179094556080850151915181529290922001805467ffffffffffffffff90921674010000000000000000000000000000000000000000027fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff909216919091179055610feb565b6020818101516000908152600390915260408120907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a8a05926040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc057600080fd5b505afa158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf89190612133565b61ffff16815260208101919091526040016000205460ff16610feb5760006040518060e00160405280600960ff168152602001836020015181526020018360400151815260200183606001518152602001836080015167ffffffffffffffff1681526020018360a0015161ffff168152602001600160ff1681525090506000610d8483602001516104d2565b90506001600160a01b03811615610dc25760408301516001600160a01b0382161415610db657600360c0830152610f31565b600260c0830152610f31565b6020808401516000908152600290915260409020546001600160a01b031615610e27576040838101516020808601516000908152600290915291909120546001600160a01b03161415610e1b57600560c0830152610f31565b600460c0830152610f31565b6040830151602084810180516000908152600283526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0396909616959095179094559051815260039091529081206001917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a8a05926040518163ffffffff1660e01b815260040160206040518083038186803b158015610ed557600080fd5b505afa158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190612133565b61ffff1681526020810191909152604001600020805460ff19169115159190911790555b6006546001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b19a437e9063ffffffff16610f7486610581565b60016040518463ffffffff1660e01b8152600401610f9493929190612150565b602060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190612182565b965050505b5050505092915050565b610ffd611198565b60005b600454811015611056578161ffff166004828154811061102257611022611de5565b60009182526020909120601082040154600f9091166002026101000a900461ffff16141561104e575050565b600101611000565b5060048054600181018255600091909152601081047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805461ffff8085166002600f909516949094026101000a9384029302191691909117905550565b6110bc611198565b6001600160a01b0382166110cf57600080fd5b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b611104848461082f565b5050505050565b611113611198565b6001600160a01b03811661118f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016108c9565b6107f28161151e565b6000546001600160a01b0316331461099f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108c9565b6000818152600260205260408120805473ffffffffffffffffffffffffffffffffffffffff191690555b6004548110156107f0576000828152600360205260408120600480548391908590811061124b5761124b611de5565b60009182526020808320601083040154600f9092166002026101000a90910461ffff1683528201929092526040019020805460ff191691151591909117905560010161121c565b6000828152600260209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861617905560039091528120600190827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a8a05926040518163ffffffff1660e01b815260040160206040518083038186803b15801561132d57600080fd5b505afa158015611341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113659190612133565b61ffff16815260208082019290925260409081016000908120805460ff191694151594909417909355805160e0810182526009815291820186905281016001600160a01b038516815260200160008152600060208201526040017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a8a05926040518163ffffffff1660e01b815260040160206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114509190612133565b61ffff16815260016020909101526006549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b19a437e9063ffffffff166114a484610581565b60016040518463ffffffff1660e01b81526004016114c493929190612150565b602060405180830381600087803b1580156114de57600080fd5b505af11580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115169190612182565b949350505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526040805160e08101909152600090806115d9836115d387826001611735565b9061185d565b60ff16815260200161160360006115fd60016020896117359092919063ffffffff16565b906118c3565b815260200161162460006115fd60216020896117359092919063ffffffff16565b815260200161164560006115fd60416020896117359092919063ffffffff16565b8152602001611662600061165c8760616008611735565b90611929565b67ffffffffffffffff16815260200161168960006116838760696002611735565b9061198f565b61ffff1681526020016116a460006115d387606b6001611735565b60ff1690529392505050565b6000805b60045481101561172c57600083815260036020526040812060048054919291849081106116e3576116e3611de5565b60009182526020808320601083040154600f9092166002026101000a90910461ffff16835282019290925260400190205460ff166117245750600092915050565b6001016116b4565b50600192915050565b60608161174381601f61219f565b10156117915760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064016108c9565b61179b828461219f565b845110156117eb5760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016108c9565b60608215801561180a5760405191506000825260208201604052611854565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561184357805183526020928301920161182b565b5050858452601f01601f1916604052505b50949350505050565b600061186a82600161219f565b835110156118ba5760405162461bcd60e51b815260206004820152601360248201527f746f55696e74385f6f75744f66426f756e64730000000000000000000000000060448201526064016108c9565b50016001015190565b60006118d082602061219f565b835110156119205760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e6473000000000000000000000060448201526064016108c9565b50016020015190565b600061193682600861219f565b835110156119865760405162461bcd60e51b815260206004820152601460248201527f746f55696e7436345f6f75744f66426f756e647300000000000000000000000060448201526064016108c9565b50016008015190565b600061199c82600261219f565b835110156119ec5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e647300000000000000000000000060448201526064016108c9565b50016002015190565b600060208284031215611a0757600080fd5b5035919050565b61ffff811681146107f257600080fd5b60008060408385031215611a3157600080fd5b823591506020830135611a4381611a0e565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611a8a57835161ffff1683529284019291840191600101611a6a565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611acf57611acf611a96565b60405290565b604051610160810167ffffffffffffffff81118282101715611acf57611acf611a96565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b2257611b22611a96565b604052919050565b60ff811681146107f257600080fd5b67ffffffffffffffff811681146107f257600080fd5b600060e08284031215611b6157600080fd5b60405160e0810181811067ffffffffffffffff82111715611b8457611b84611a96565b6040528235611b9281611b2a565b808252506020830135602082015260408301356040820152606083013560608201526080830135611bc281611b39565b608082015260a0830135611bd581611a0e565b60a082015260c0830135611be881611b2a565b60c08201529392505050565b60005b83811015611c0f578181015183820152602001611bf7565b83811115611c1e576000848401525b50505050565b60008151808452611c3c816020860160208601611bf4565b601f01601f19169290920160200192915050565b602081526000611c636020830184611c24565b9392505050565b600060208284031215611c7c57600080fd5b8135611c6381611a0e565b80356001600160a01b0381168114611c9e57600080fd5b919050565b60008060408385031215611cb657600080fd5b82359150611cc660208401611c87565b90509250929050565b60008060208385031215611ce257600080fd5b823567ffffffffffffffff80821115611cfa57600080fd5b818501915085601f830112611d0e57600080fd5b813581811115611d1d57600080fd5b866020828501011115611d2f57600080fd5b60209290920196919550909350505050565b80151581146107f257600080fd5b60008060408385031215611d6257600080fd5b611d6b83611c87565b91506020830135611a4381611d41565b60008060008060808587031215611d9157600080fd5b84359350611da160208601611c87565b9250611daf60408601611c87565b91506060850135611dbf81611b39565b939692955090935050565b600060208284031215611ddc57600080fd5b611c6382611c87565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015611e2357611e23611dfb565b500390565b634e487b7160e01b600052603160045260246000fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b8051611c9e81611b2a565b805163ffffffff81168114611c9e57600080fd5b8051611c9e81611a0e565b8051611c9e81611b39565b600082601f830112611eb357600080fd5b815167ffffffffffffffff811115611ecd57611ecd611a96565b611ee06020601f19601f84011601611af9565b818152846020838601011115611ef557600080fd5b611516826020830160208701611bf4565b600082601f830112611f1757600080fd5b8151602067ffffffffffffffff821115611f3357611f33611a96565b611f41818360051b01611af9565b82815260079290921b84018101918181019086841115611f6057600080fd5b8286015b84811015611fc55760808189031215611f7d5760008081fd5b611f85611aac565b815181528482015185820152604080830151611fa081611b2a565b90820152606082810151611fb381611b2a565b90820152835291830191608001611f64565b509695505050505050565b8051611c9e81611d41565b600080600060608486031215611ff057600080fd5b835167ffffffffffffffff8082111561200857600080fd5b90850190610160828803121561201d57600080fd5b612025611ad5565b61202e83611e6d565b815261203c60208401611e78565b602082015261204d60408401611e78565b604082015261205e60608401611e8c565b60608201526080830151608082015261207960a08401611e97565b60a082015261208a60c08401611e6d565b60c082015260e0830151828111156120a157600080fd5b6120ad89828601611ea2565b60e0830152506101006120c1818501611e78565b9082015261012083810151838111156120d957600080fd5b6120e58a828701611f06565b91830191909152506101408381015190820152945061210660208701611fd0565b9350604086015191508082111561211c57600080fd5b5061212986828701611ea2565b9150509250925092565b60006020828403121561214557600080fd5b8151611c6381611a0e565b63ffffffff8416815260606020820152600061216f6060830185611c24565b905060ff83166040830152949350505050565b60006020828403121561219457600080fd5b8151611c6381611b39565b600082198211156121b2576121b2611dfb565b50019056fea164736f6c6343000809000a";

type DotRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DotRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DotRegistry__factory extends ContractFactory {
  constructor(...args: DotRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _coreBridgedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DotRegistry> {
    return super.deploy(
      _coreBridgedAddress,
      overrides || {}
    ) as Promise<DotRegistry>;
  }
  override getDeployTransaction(
    _coreBridgedAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_coreBridgedAddress, overrides || {});
  }
  override attach(address: string): DotRegistry {
    return super.attach(address) as DotRegistry;
  }
  override connect(signer: Signer): DotRegistry__factory {
    return super.connect(signer) as DotRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DotRegistryInterface {
    return new utils.Interface(_abi) as DotRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DotRegistry {
    return new Contract(address, _abi, signerOrProvider) as DotRegistry;
  }
}

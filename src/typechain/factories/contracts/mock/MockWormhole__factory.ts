/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  MockWormhole,
  MockWormholeInterface,
} from "../../../contracts/mock/MockWormhole";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "cid",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "LogMessagePublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "vm",
        type: "bytes",
      },
    ],
    name: "MockVMLog",
    type: "event",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "emitterAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "createDummyVM",
    outputs: [
      {
        internalType: "bytes",
        name: "vm",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGuardianSetIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "getGuardianSet",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct Structs.GuardianSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuardianSetExpiry",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "governanceActionIsConsumed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "parseAndVerifyVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedVM",
        type: "bytes",
      },
    ],
    name: "parseVM",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "consistencyLevel",
        type: "uint8",
      },
    ],
    name: "publishMessage",
    outputs: [
      {
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "guardianIndex",
            type: "uint8",
          },
        ],
        internalType: "struct Structs.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "keys",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "expirationTime",
            type: "uint32",
          },
        ],
        internalType: "struct Structs.GuardianSet",
        name: "guardianSet",
        type: "tuple",
      },
    ],
    name: "verifySignatures",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "version",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "nonce",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "emitterChainId",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "emitterAddress",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sequence",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "consistencyLevel",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
          {
            internalType: "uint32",
            name: "guardianSetIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "guardianIndex",
                type: "uint8",
              },
            ],
            internalType: "struct Structs.Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct Structs.VM",
        name: "vm",
        type: "tuple",
      },
    ],
    name: "verifyVM",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161185538038061185583398101604081905261002f9161003b565b61ffff16608052610066565b60006020828403121561004d57600080fd5b815161ffff8116811461005f57600080fd5b9392505050565b6080516117cd610088600039600081816101b1015261078801526117cd6000f3fe6080604052600436106100e85760003560e01c8063b172b2221161008a578063d60b347f11610059578063d60b347f146102cd578063eb8d3f12146102e8578063f951975a146102fd578063fbe3c2cd1461032a57600080fd5b8063b172b222146100ed578063b19a437e14610245578063b84bc5ee14610271578063c0fd8bde1461029e57600080fd5b8063875be02a116100c6578063875be02a146101645780639a8a0592146101a2578063a0cce1b3146101e4578063a9e118931461021857600080fd5b80631a90a219146100ed5780631cfe79511461010e5780632c3c02a414610133575b600080fd5b3480156100f957600080fd5b50604051600081526020015b60405180910390f35b34801561011a57600080fd5b5060005b60405163ffffffff9091168152602001610105565b34801561013f57600080fd5b5061015461014e366004610c9f565b50600190565b6040519015158152602001610105565b34801561017057600080fd5b5061019461017f366004610f08565b50604080516020810190915260008152600191565b604051610105929190611089565b3480156101ae57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405161ffff9091168152602001610105565b3480156101f057600080fd5b506101946101ff3660046110d0565b5050604080516020810190915260008152600192909150565b34801561022457600080fd5b506102386102333660046111d9565b61033e565b6040516101059190611363565b61025861025336600461137d565b61072b565b60405167ffffffffffffffff9091168152602001610105565b34801561027d57600080fd5b5061029161028c3660046113db565b6107ef565b6040516101059190611432565b3480156102aa57600080fd5b506102be6102b9366004611445565b610831565b604051610105939291906114b7565b3480156102d957600080fd5b5061015461014e3660046114ee565b3480156102f457600080fd5b5061011e6108eb565b34801561030957600080fd5b5061031d610318366004611509565b6108fe565b6040516101059190611524565b34801561033657600080fd5b5060006101d1565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e0820181905261010082018390526101208201526101408101829052906103a08382610979565b60ff1682526103b06001826115b2565b9050816000015160ff1660011461040e5760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c6500000000000000000060448201526064015b60405180910390fd5b61041883826109df565b63ffffffff1661010083015261042f6004826115b2565b9050600061043d8483610979565b60ff16905061044d6001836115b2565b91508067ffffffffffffffff81111561046857610468610cb8565b6040519080825280602002602001820160405280156104ba57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816104865790505b5061012084015260005b818110156105f1576104d68584610979565b84610120015182815181106104ed576104ed6115ca565b602090810291909101015160ff90911660609091015261050e6001846115b2565b925061051a8584610a45565b8461012001518281518110610531576105316115ca565b6020026020010151600001818152505060208361054e91906115b2565b925061055a8584610a45565b8461012001518281518110610571576105716115ca565b6020026020010151602001818152505060208361058e91906115b2565b925061059a8584610979565b6105a590601b6115e0565b84610120015182815181106105bc576105bc6115ca565b602090810291909101015160ff9091166040909101526105dd6001846115b2565b9250806105e981611605565b9150506104c4565b50600061060d838487516106059190611620565b879190610aab565b9050808051906020012060405160200161062991815260200190565b60408051601f19818403018152919052805160209091012061014085015261065185846109df565b63ffffffff1660208501526106676004846115b2565b925061067385846109df565b63ffffffff1660408501526106896004846115b2565b92506106958584610bd3565b61ffff1660608501526106a96002846115b2565b92506106b58584610a45565b60808501526106c56020846115b2565b92506106d18584610c39565b67ffffffffffffffff1660a08501526106eb6008846115b2565b92506106f78584610979565b60ff1660c085015261070a6001846115b2565b925061071d838487516106059190611620565b60e085015250919392505050565b60003373ffffffffffffffffffffffffffffffffffffffff167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2828686866040516107799493929190611637565b60405180910390a260006107ae7f000000000000000000000000000000000000000000000000000000000000000033866107ef565b90507f57afa2b8c5461a04a67dd3bd0c6da95bd375771e4035d040999484fd3a7acb44816040516107df9190611432565b60405180910390a1509392505050565b606060018060006001808888600060018a6040516020016108199a99989796959493929190611696565b60405160208183030381529060405290509392505050565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018190526101008201839052610120820152610140810191909152600060606108cc85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061033e92505050565b9250600191506040518060200160405280600081525090509250925092565b60006108f9426117706115b2565b905090565b604080518082019091526060815260006020820152606060008160008151811061092a5761092a6115ca565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091018201526040805180820190915282815290810161096a426117706115b2565b63ffffffff1690529392505050565b60006109868260016115b2565b835110156109d65760405162461bcd60e51b815260206004820152601360248201527f746f55696e74385f6f75744f66426f756e6473000000000000000000000000006044820152606401610405565b50016001015190565b60006109ec8260046115b2565b83511015610a3c5760405162461bcd60e51b815260206004820152601460248201527f746f55696e7433325f6f75744f66426f756e64730000000000000000000000006044820152606401610405565b50016004015190565b6000610a528260206115b2565b83511015610aa25760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e647300000000000000000000006044820152606401610405565b50016020015190565b606081610ab981601f6115b2565b1015610b075760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610405565b610b1182846115b2565b84511015610b615760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610405565b606082158015610b805760405191506000825260208201604052610bca565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610bb9578051835260209283019201610ba1565b5050858452601f01601f1916604052505b50949350505050565b6000610be08260026115b2565b83511015610c305760405162461bcd60e51b815260206004820152601460248201527f746f55696e7431365f6f75744f66426f756e64730000000000000000000000006044820152606401610405565b50016002015190565b6000610c468260086115b2565b83511015610c965760405162461bcd60e51b815260206004820152601460248201527f746f55696e7436345f6f75744f66426f756e64730000000000000000000000006044820152606401610405565b50016008015190565b600060208284031215610cb157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610cf157610cf1610cb8565b60405290565b604051610160810167ffffffffffffffff81118282101715610cf157610cf1610cb8565b6040805190810167ffffffffffffffff81118282101715610cf157610cf1610cb8565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d6757610d67610cb8565b604052919050565b803560ff81168114610d8057600080fd5b919050565b803563ffffffff81168114610d8057600080fd5b803561ffff81168114610d8057600080fd5b803567ffffffffffffffff81168114610d8057600080fd5b600082601f830112610dd457600080fd5b813567ffffffffffffffff811115610dee57610dee610cb8565b610e016020601f19601f84011601610d3e565b818152846020838601011115610e1657600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115610e4d57610e4d610cb8565b5060051b60200190565b600082601f830112610e6857600080fd5b81356020610e7d610e7883610e33565b610d3e565b82815260079290921b84018101918181019086841115610e9c57600080fd5b8286015b84811015610efd5760808189031215610eb95760008081fd5b610ec1610cce565b8135815284820135858201526040610eda818401610d6f565b908201526060610eeb838201610d6f565b90820152835291830191608001610ea0565b509695505050505050565b600060208284031215610f1a57600080fd5b813567ffffffffffffffff80821115610f3257600080fd5b908301906101608286031215610f4757600080fd5b610f4f610cf7565b610f5883610d6f565b8152610f6660208401610d85565b6020820152610f7760408401610d85565b6040820152610f8860608401610d99565b606082015260808301356080820152610fa360a08401610dab565b60a0820152610fb460c08401610d6f565b60c082015260e083013582811115610fcb57600080fd5b610fd787828601610dc3565b60e083015250610100610feb818501610d85565b90820152610120838101358381111561100357600080fd5b61100f88828701610e57565b91830191909152506101409283013592810192909252509392505050565b60005b83811015611048578181015183820152602001611030565b83811115611057576000848401525b50505050565b6000815180845261107581602086016020860161102d565b601f01601f19169290920160200192915050565b82151581526040602082015260006110a4604083018461105d565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d8057600080fd5b6000806000606084860312156110e557600080fd5b8335925060208085013567ffffffffffffffff8082111561110557600080fd5b61111188838901610e57565b9450604087013591508082111561112757600080fd5b908601906040828903121561113b57600080fd5b611143610d1b565b82358281111561115257600080fd5b83019150601f8201891361116557600080fd5b8135611173610e7882610e33565b81815260059190911b8301850190858101908b83111561119257600080fd5b938601935b828510156111b7576111a8856110ac565b82529386019390860190611197565b8352506111c79050838501610d85565b84820152809450505050509250925092565b6000602082840312156111eb57600080fd5b813567ffffffffffffffff81111561120257600080fd5b6110a484828501610dc3565b600081518084526020808501945080840160005b8381101561126757815180518852838101518489015260408082015160ff908116918a0191909152606091820151169088015260809096019590820190600101611222565b509495945050505050565b805160ff16825260006101606020830151611295602086018263ffffffff169052565b5060408301516112ad604086018263ffffffff169052565b5060608301516112c3606086018261ffff169052565b506080830151608085015260a08301516112e960a086018267ffffffffffffffff169052565b5060c08301516112fe60c086018260ff169052565b5060e08301518160e08601526113168286018261105d565b915050610100808401516113318287018263ffffffff169052565b5050610120808401518583038287015261134b838261120e565b61014095860151969095019590955250919392505050565b6020815260006113766020830184611272565b9392505050565b60008060006060848603121561139257600080fd5b61139b84610d85565b9250602084013567ffffffffffffffff8111156113b757600080fd5b6113c386828701610dc3565b9250506113d260408501610d6f565b90509250925092565b6000806000606084860312156113f057600080fd5b6113f984610d99565b925060208401359150604084013567ffffffffffffffff81111561141c57600080fd5b61142886828701610dc3565b9150509250925092565b602081526000611376602083018461105d565b6000806020838503121561145857600080fd5b823567ffffffffffffffff8082111561147057600080fd5b818501915085601f83011261148457600080fd5b81358181111561149357600080fd5b8660208285010111156114a557600080fd5b60209290920196919550909350505050565b6060815260006114ca6060830186611272565b841515602084015282810360408401526114e4818561105d565b9695505050505050565b60006020828403121561150057600080fd5b611376826110ac565b60006020828403121561151b57600080fd5b61137682610d85565b6020808252825160408383015280516060840181905260009291820190839060808601905b8083101561157f57835173ffffffffffffffffffffffffffffffffffffffff168252928401926001929092019190840190611549565b5063ffffffff848801511660408701528094505050505092915050565b634e487b7160e01b600052601160045260246000fd5b600082198211156115c5576115c561159c565b500190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168060ff038211156115fd576115fd61159c565b019392505050565b60006000198214156116195761161961159c565b5060010190565b6000828210156116325761163261159c565b500390565b67ffffffffffffffff8516815263ffffffff84166020820152608060408201526000611666608083018561105d565b905060ff8316606083015295945050505050565b6000815161168c81856020860161102d565b9290920192915050565b60007fff00000000000000000000000000000000000000000000000000000000000000808d60f81b1683527fffffffff00000000000000000000000000000000000000000000000000000000808d60e01b166001850152818c60f81b166005850152808b60e01b166006850152808a60e01b16600a85015250507fffff0000000000000000000000000000000000000000000000000000000000008760f01b16600e830152856010830152611772603083018660c01b7fffffffffffffffff000000000000000000000000000000000000000000000000169052565b6117a3603883018560f81b7fff00000000000000000000000000000000000000000000000000000000000000169052565b6117b0603983018461167a565b9c9b50505050505050505050505056fea164736f6c6343000809000a";

type MockWormholeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWormholeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWormhole__factory extends ContractFactory {
  constructor(...args: MockWormholeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    cid: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockWormhole> {
    return super.deploy(cid, overrides || {}) as Promise<MockWormhole>;
  }
  override getDeployTransaction(
    cid: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cid, overrides || {});
  }
  override attach(address: string): MockWormhole {
    return super.attach(address) as MockWormhole;
  }
  override connect(signer: Signer): MockWormhole__factory {
    return super.connect(signer) as MockWormhole__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWormholeInterface {
    return new utils.Interface(_abi) as MockWormholeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWormhole {
    return new Contract(address, _abi, signerOrProvider) as MockWormhole;
  }
}
